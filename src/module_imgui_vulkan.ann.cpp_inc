// ------------
// structures
// ------------

	IMPLEMENT_EXTERNAL_TYPE_FACTORY(ImGui_ImplVulkanH_FrameSemaphores,ImGui_ImplVulkanH_FrameSemaphores)
	IMPLEMENT_EXTERNAL_TYPE_FACTORY(ImGui_ImplVulkanH_Frame,ImGui_ImplVulkanH_Frame)
	IMPLEMENT_EXTERNAL_TYPE_FACTORY(ImGui_ImplVulkanH_Window,ImGui_ImplVulkanH_Window)
	IMPLEMENT_EXTERNAL_TYPE_FACTORY(ImGui_ImplVulkan_InitInfo,ImGui_ImplVulkan_InitInfo)

struct ImGui_ImplVulkanH_FrameSemaphores_GeneratedAnnotation : ManagedStructureAnnotation<ImGui_ImplVulkanH_FrameSemaphores> {
	ImGui_ImplVulkanH_FrameSemaphores_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("ImGui_ImplVulkanH_FrameSemaphores", ml) {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(ImageAcquiredSemaphore)>("ImageAcquiredSemaphore","ImageAcquiredSemaphore");
		addField<DAS_BIND_MANAGED_FIELD(RenderCompleteSemaphore)>("RenderCompleteSemaphore","RenderCompleteSemaphore");
	}
};
struct ImGui_ImplVulkanH_Frame_GeneratedAnnotation : ManagedStructureAnnotation<ImGui_ImplVulkanH_Frame> {
	ImGui_ImplVulkanH_Frame_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("ImGui_ImplVulkanH_Frame", ml) {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(CommandPool)>("CommandPool","CommandPool");
		addField<DAS_BIND_MANAGED_FIELD(CommandBuffer)>("CommandBuffer","CommandBuffer");
		addField<DAS_BIND_MANAGED_FIELD(Fence)>("Fence","Fence");
		addField<DAS_BIND_MANAGED_FIELD(Backbuffer)>("Backbuffer","Backbuffer");
		addField<DAS_BIND_MANAGED_FIELD(BackbufferView)>("BackbufferView","BackbufferView");
		addField<DAS_BIND_MANAGED_FIELD(Framebuffer)>("Framebuffer","Framebuffer");
	}
};
struct ImGui_ImplVulkanH_Window_GeneratedAnnotation : ManagedStructureAnnotation<ImGui_ImplVulkanH_Window> {
	ImGui_ImplVulkanH_Window_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("ImGui_ImplVulkanH_Window", ml) {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Width)>("Width","Width");
		addField<DAS_BIND_MANAGED_FIELD(Height)>("Height","Height");
		addField<DAS_BIND_MANAGED_FIELD(Swapchain)>("Swapchain","Swapchain");
		addField<DAS_BIND_MANAGED_FIELD(Surface)>("Surface","Surface");
		addField<DAS_BIND_MANAGED_FIELD(SurfaceFormat)>("SurfaceFormat","SurfaceFormat");
		addField<DAS_BIND_MANAGED_FIELD(PresentMode)>("PresentMode","PresentMode");
		addField<DAS_BIND_MANAGED_FIELD(RenderPass)>("RenderPass","RenderPass");
		addField<DAS_BIND_MANAGED_FIELD(Pipeline)>("Pipeline","Pipeline");
		addField<DAS_BIND_MANAGED_FIELD(ClearEnable)>("ClearEnable","ClearEnable");
		addField<DAS_BIND_MANAGED_FIELD(ClearValue)>("ClearValue","ClearValue");
		addField<DAS_BIND_MANAGED_FIELD(FrameIndex)>("FrameIndex","FrameIndex");
		addField<DAS_BIND_MANAGED_FIELD(ImageCount)>("ImageCount","ImageCount");
		addField<DAS_BIND_MANAGED_FIELD(SemaphoreIndex)>("SemaphoreIndex","SemaphoreIndex");
		addField<DAS_BIND_MANAGED_FIELD(Frames)>("Frames","Frames");
		addField<DAS_BIND_MANAGED_FIELD(FrameSemaphores)>("FrameSemaphores","FrameSemaphores");
	}
};
struct ImGui_ImplVulkan_InitInfo_GeneratedAnnotation : ManagedStructureAnnotation<ImGui_ImplVulkan_InitInfo> {
	ImGui_ImplVulkan_InitInfo_GeneratedAnnotation(ModuleLibrary & ml) : ManagedStructureAnnotation ("ImGui_ImplVulkan_InitInfo", ml) {
	}
	void init () {
		addField<DAS_BIND_MANAGED_FIELD(Instance)>("Instance","Instance");
		addField<DAS_BIND_MANAGED_FIELD(PhysicalDevice)>("PhysicalDevice","PhysicalDevice");
		addField<DAS_BIND_MANAGED_FIELD(Device)>("Device","Device");
		addField<DAS_BIND_MANAGED_FIELD(QueueFamily)>("QueueFamily","QueueFamily");
		addField<DAS_BIND_MANAGED_FIELD(Queue)>("Queue","Queue");
		addField<DAS_BIND_MANAGED_FIELD(PipelineCache)>("PipelineCache","PipelineCache");
		addField<DAS_BIND_MANAGED_FIELD(DescriptorPool)>("DescriptorPool","DescriptorPool");
		addField<DAS_BIND_MANAGED_FIELD(Subpass)>("Subpass","Subpass");
		addField<DAS_BIND_MANAGED_FIELD(MinImageCount)>("MinImageCount","MinImageCount");
		addField<DAS_BIND_MANAGED_FIELD(ImageCount)>("ImageCount","ImageCount");
		addField<DAS_BIND_MANAGED_FIELD(MSAASamples)>("MSAASamples","MSAASamples");
		addField<DAS_BIND_MANAGED_FIELD(Allocator)>("Allocator","Allocator");
		addField<DAS_BIND_MANAGED_FIELD(CheckVkResultFn)>("CheckVkResultFn","CheckVkResultFn");
	}
};
